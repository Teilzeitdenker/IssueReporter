var documenterSearchIndex = {"docs":
[{"location":"#IssueReporter.jl-Documentation","page":"IssueReporter.jl Documentation","title":"IssueReporter.jl Documentation","text":"","category":"section"},{"location":"","page":"IssueReporter.jl Documentation","title":"IssueReporter.jl Documentation","text":"CurrentModule = IssueReporter","category":"page"},{"location":"","page":"IssueReporter.jl Documentation","title":"IssueReporter.jl Documentation","text":"","category":"page"},{"location":"#Functions","page":"IssueReporter.jl Documentation","title":"Functions","text":"","category":"section"},{"location":"","page":"IssueReporter.jl Documentation","title":"IssueReporter.jl Documentation","text":"packageuri(pkgname::String)\r\ntokenisdefined()\r\ntoken()\r\ngithubauth()\r\nrepoid(package_name::String)\r\nreport(package_name::String, title::String, body::String)","category":"page"},{"location":"#IssueReporter.packageuri-Tuple{String}","page":"IssueReporter.jl Documentation","title":"IssueReporter.packageuri","text":"packageuri(pkgname)\n\n\nTakes the name of a registered Julia package and returns the associated repo git URL. Examples\n\njulia> IssueReporter.packageuri(\"IssueReporter\")\n\"git://github.com/essenciary/IssueReporter.jl.git\"\n\n\n\n\n\n","category":"method"},{"location":"#IssueReporter.tokenisdefined-Tuple{}","page":"IssueReporter.jl Documentation","title":"IssueReporter.tokenisdefined","text":"tokenisdefined()\n\n\nChecks if the required GitHub authentication token is defined.\n\n\n\n\n\n","category":"method"},{"location":"#IssueReporter.token-Tuple{}","page":"IssueReporter.jl Documentation","title":"IssueReporter.token","text":"token()\n\n\nReturns the configured GitHub authentication token, if defined â€“ or throws an error otherwise.\n\n\n\n\n\n","category":"method"},{"location":"#IssueReporter.githubauth-Tuple{}","page":"IssueReporter.jl Documentation","title":"IssueReporter.githubauth","text":"githubauth()\n\n\nPerforms GitHub authentication and returns the OAuth2 object, required by further GitHub API calls.\n\n\n\n\n\n","category":"method"},{"location":"#IssueReporter.repoid-Tuple{String}","page":"IssueReporter.jl Documentation","title":"IssueReporter.repoid","text":"repoid(package_name)\n\n\nConverts a registered Julia package name to the corresponding GitHub \"username/repo_name\" string. Examples\n\njulia> IssueReporter.repoid(\"IssueReporter\")\n\"essenciary/IssueReporter.jl\"\n\n\n\n\n\n","category":"method"},{"location":"#IssueReporter.report-Tuple{String, String, String}","page":"IssueReporter.jl Documentation","title":"IssueReporter.report","text":"report(package_name, title, body)\n\n\nCreates a new GitHub issue with the title title and the content body onto the repo corresponding to the registered package called pack-age_name.\n\n\n\n\n\n","category":"method"},{"location":"#Index","page":"IssueReporter.jl Documentation","title":"Index","text":"","category":"section"},{"location":"","page":"IssueReporter.jl Documentation","title":"IssueReporter.jl Documentation","text":"","category":"page"}]
}
